version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: mea_core_db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    container_name: mea_core_api
    build:
      context: ..
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db  # Usar el nombre del servicio de la DB
      - DB_PORT=5432 # Puerto interno de Docker
      - DB_NAME=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
    command: uvicorn server.main:app --host 0.0.0.0 --port 8000

  frontend:
    container_name: mea_core_frontend
    build:
      context: ../webapp
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:80" # Mapear el puerto 80 de Nginx al 3000 del host
    depends_on:
      - api

volumes:
  postgres_data:
    driver: local
